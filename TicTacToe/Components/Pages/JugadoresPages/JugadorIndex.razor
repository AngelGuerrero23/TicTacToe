@page "/Jugador/Index"
@using TicTacToe.Models
@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@* MainLayout.razor *@
<link href="app.css" rel="stylesheet" />

<PageTitle>Jugadores</PageTitle>

<h3 class="mb-3">Listado de Jugadores</h3>

@if (listaJugadores == null)
{
    <p><em>Cargando jugadores...</em></p>
}
else if (!listaJugadores.Any())
{
    <div class="alert alert-info">No hay jugadores registrados.</div>
}
else
{
    <table class="table table-striped table-bordered shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Partidas</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var jugador in listaJugadores)
            {
                <tr>
                    <td>@jugador.JugadorId</td>
                    <td>@jugador.JugadorName</td>
                    <td>@jugador.partida</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-2"
                                @onclick="() => Editar(jugador.JugadorId)">
                            Editar
                        </button>
                        <button class="btn btn-sm btn-danger"
                                @onclick="() => Eliminar(jugador.JugadorId)">
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="mt-3">
    <a href="/Jugador/Create" class="btn btn-success">
        <span class="bi bi-plus-circle"></span> Crear Nuevo
    </a>
</div>

@code {

    private List<Jugadores>? listaJugadores;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            listaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

    private void Editar(int id)
    {
        navigationManager.NavigateTo($"/Jugador/Edit/{id}");
    }

    private async Task Eliminar(int id)
    {
        try
        {
            var eliminado = await jugadoresService.Eliminar(id);
            if (eliminado)
            {
                listaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
                //StateHasChanged();
            }
        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
    