@page "/Partidas/Index"
@using TicTacToe.Models;
@inject PartidasService partidasService

@inject NavigationManager navigationManager
@rendermode InteractiveServer

@* MainLayout.razor *@
<link href="app.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">


<PageTitle>Partidas</PageTitle>
<h3 class="mb-">Listado de Partidas</h3>

@*Labels*@
<div class="row">
    @*Filtrar por*@
    <div class="col-3">
        <label class="col-form-label"><strong>Filtrar por</strong></label>
    </div>

    @*ValorFiltro*@
    <div class="col-4">
        <label class="col-form-label"><strong>Busqueda</strong></label>
    </div>
</div>

@*Inputs y botones*@
<div class="row align-items-center">
    @*Filtro*@
    <div class="col-3">
        <InputSelect class="form-select" @bind-Value="Filtro">
            <option value="" selected disabled>Elija una opcion</option>
            <option value="PartidaId">JugadorId</option>
            <option value="Fecha Inicio">Fecha Inicio</option>
            <option value="Fecha Fin">Fecha Fin</option>
            <option value="Estado">Estado</option>
            <option value="Ganador">Ganador</option>
        </InputSelect>
    </div>

    @*Busqueda*@
    <div class="col-4">
        <div class="input-group">
            <input class="form-control" @bind="ValorFiltro" placeholder="Buscar"/>
            <button type="button" class="btn btn-outline-primary" @onclick="Buscar">
                <i class="fade fa-search"></i>Buscar
            </button>
        </div>
    </div>
</div>
<table class="table table-striped table-bordered shadow-sm">
    <thead class="table-dark">
        <tr>
            <th>PartidaId</th>
            <th>Jugador1Id</th>
            <th>Jugador2Id</th>
            <th>Estado Partida</th>
            <th>Ganador</th>
            <th>Fecha Inicio</th>
            <th>Fecha Fin</th>
        </tr>
    </thead>
</table>
<tbody>
    @foreach(var partida in ListaPartidas)
    {
        <tr>
            <td>@partida.PartidaId</td>
            <td>@partida.Jugador1Id</td>
            <td>@partida.Jugador2Id</td>
            <td>@partida.EstadoPartida</td>
            <td>@partida.EstadoTablero</td>
            <td>@partida.GanadorId</td>
            <td>@partida.FechaInicio</td>
            <td>@partida.FechaFin</td>
            <td>
                <button class="btn btn-sm btn-outline-primary me-2"
                @onclick="()=> Editar(partida.PartidaId)">Editar
            </button>
            <button class="btn btn-sm btn-danger"
                    @onclick="()=>Eliminar(partida.PartidaId)">Eliminar
                </button>
            </td>
        </tr>
}<div class="mt-3">
    <a href="/Partidas/Create" class="btn btn-sucess">
        <span class="bi bi-plus-circle"></span>Crear Nueva Partida
    </a>
</div>

</tbody>
@code {
    public List<Partidas>? ListaPartidas { get; set; } = new List<Partidas>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaPartidas = await partidasService.Listar(p => p.PartidaId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim().ToLower() != "")
            if (Filtro == "PartidaId")
                ListaPartidas = await partidasService.Listar(p => p.PartidaId.ToString().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "Jugador1Id")
                ListaPartidas = await partidasService.Listar(p => p.Jugador1Id.ToString().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "Jugador2Id")
                ListaPartidas = await partidasService.Listar(p => p.Jugador2Id.ToString().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "EstadoPartida")
                ListaPartidas = await partidasService.Listar(p => p.EstadoPartida.Contains(ValorFiltro.ToLower()));
            else if (Filtro == "GanadorId")
                ListaPartidas = await partidasService.Listar(p => p.GanadorId.ToString().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "FechaInicio")
                ListaPartidas = await partidasService.Listar(p => p.FechaInicio.ToString().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "FechaFin")
                ListaPartidas = await partidasService.Listar(p => p.FechaFin.ToString().Contains(ValorFiltro.ToLower()));
            else ListaPartidas = await partidasService.Listar(p => p.PartidaId > 0);
    }
    private void Editar(int id)
    {
        navigationManager.NavigateTo($"/Partidas/Edit{id}");
    }

    private async Task Eliminar(int id)
    {
        var eliminado = await partidasService.Eliminar(id);
        if (eliminado)
            ListaPartidas = await partidasService.Listar(p => p.PartidaId > 0);
    }


}
